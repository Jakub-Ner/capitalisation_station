# Auto-generated by tool

"""Models for the asset_bridging protocol performatives to facilitate hypothesis strategy generation."""

from pydantic import BaseModel
from packages.zarathustra.protocols.asset_bridging.custom_types import (
    ErrorCode,
    BridgeStatus,
)


class RequestBridge(BaseModel):
    """Model for the `REQUEST_BRIDGE` initial speech act performative."""

    source_chain: str
    target_chain: str
    source_token: str
    target_token: str | None
    bridge: str
    kwargs: dict[str, str] | None


class BridgeStatus(BaseModel):
    """Model for the `BRIDGE_STATUS` initial speech act performative."""

    status: BridgeStatus
    tx_hash: bytes


class RequestStatus(BaseModel):
    """Model for the `REQUEST_STATUS` initial speech act performative."""

    tx_hash: bytes


class Error(BaseModel):
    """Model for the `ERROR` initial speech act performative."""

    code: ErrorCode
    message: str


for cls in BaseModel.__subclasses__():
    cls.model_rebuild()
